#!/bin/bash

TRUE=1
FALSE=0


function check_param {
    res=$FALSE
    for name in $2
    do
        if [ "$name" -eq "$1" ]
        then
            res=$TRUE
        fi
    done
    echo $res
}

function is_dir_exists {
    res=$FALSE
    if [ -d $2/$1 ]
    then
        res=$TRUE
    fi
    echo $res
}

# check laravel root directory
if [ -z $laravel_root ]
then
    laravel_root='.'
fi

# set variables
module_name=$1
laravel_root=$2

APP_CONFIG="$laravel_root/config/app.php"
COMPOSER_CONFIG="$laravel_root/composer.json"
MODULES_ROOT="$laravel_root/modules"

function is_laravel_patched {
    res=$FALSE

    if [ $(grep -c 'Custom modules' $APP_CONFIG) -lt 1 ]
    then
        res=$TRUE
    fi

    echo $res
}

function is_module_exists {
    existing_modules=$(ls $MODULES_ROOT)
    echo $(check_param $1 $existing_modules)
}

function create_dir {
    mkdir $1
}

function config_app {
    input_row=$(($(grep -n 'Custom Modules' $APP_CONFIG | cut -d : -f 1) + 2))
    sed -i "$input_row i \ \t\t\App\\\Providers\\\\$(ucfirst $1)ServiceProvider::class," $APP_CONFIG
    echo 'Service provider added'
}

function config_composer {
    sed -i "$(grep -n 'App' $COMPOSER_CONFIG | cut -d : -f 1) i \ \t\t\"$(ucfirst $1)\\\\\\\\\": \"modules/$1/\"," $COMPOSER_CONFIG
    echo 'Namespace added'
}

function dump_autoload {
    cd $laravel_root
    composer dump-autoload -o
    echo 'Composer autoload updated'
}

function create_root {
    mkdir -p $MODULES_ROOT/$1/{routes,Http/{Controllers,Middleware}}
}

function create_view {
    mkdir $laravel_root/resources/views/$1
}

function read_file {
    cat $1
}

function add_controller {
    replace_namespace 'skeleton/SkeletonController.proto' $1 > "$MODULES_ROOT/$1/Http/Controllers/$(ucfirst $1)Controller.php"
}

function add_routes {
    replace_namespace 'skeleton/web.proto' $1 > "$MODULES_ROOT/$1/routes/web.php"
}

function add_service_provider {
    replace_namespace 'skeleton/SkeletonServiceProvider.proto' $1 > "$laravel_root/app/Providers/$(ucfirst $1)ServiceProvider.php"
}

function add_template {
    read_file 'skeleton/SkeletonIndex.blade.proto' > "$laravel_root/resources/views/$1/index.blade.php"
}

function replace_namespace {
    read_file $1 | sed -s "s/%\(.*\)%/$(ucfirst $2)/g" | sed -s "s/~\(.*\)~/$2/g"
}

function ucfirst {
    echo ${1^}
}

function create_new_module {
    # create directory structure
    create_root $1
    create_view $1

    # create new files
    add_controller $1
    add_routes $1
    add_service_provider $1
    add_template $1

    # configure framework
    config_app $1
    config_composer $1

    dump_autoload
}


# check for applied patch
if [ $(is_laravel_patched) -eq $FALSE ]
then
    echo "Patching required. Run ./laravel_patch or patch manually and try again. Aborting..."
    exit 1
fi

# check for modules root directory
if [ $(is_dir_exists $MODULES_ROOT ".") -eq $FALSE ]
then
    mkdir $MODULES_ROOT
    echo "Creating modules root directory: $MODULES_ROOT/"
fi

# check if requested module already exists
if [ $(is_module_exists $module_name) -eq $TRUE ]
then
    echo "Module $module_name already exists. Aborting..."
    exit 1
fi

# create new module
echo "Creating module $module_name"
create_new_module $module_name
